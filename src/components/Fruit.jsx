/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 public/models/fruit.glb -o src/components/Fruit.jsx -r public -k 
*/

import React, { useRef, useState } from "react";
import {
  MeshDistortMaterial,
  useGLTF,
  useCursor,
  Outlines,
} from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export default function Fruit({ setSelected, ...props }) {
  const { nodes, materials } = useGLTF("/models/fruit.glb");

  const ref = useRef();
  const [hovered, setHovered] = useState(false);
  const [clicked, setClicked] = useState(false);
  useFrame((state) =>
    ref.current.scale.setScalar(
      hovered ? 1 + Math.sin(state.clock.elapsedTime * 10) / 50 : 1
    )
  );
  // Sets document.body.style.cursor: useCursor(flag, onPointerOver = 'pointer', onPointerOut = 'auto')
  useCursor(hovered);

  const handleClick = (e) => {
    e.stopPropagation();
    setSelected(!clicked);
    setClicked(!clicked);
  };

  return (
    <group {...props} dispose={null}>
      <mesh
        ref={ref}
        name="Object_6"
        geometry={nodes.Object_6.geometry}
        material={materials.apple_green}
        position={[0, 0.306, 0]}
        onClick={handleClick}
        onPointerOver={(e) => (e.stopPropagation(), setHovered(true))}
        onPointerOut={(e) => setHovered(false)}
      >
        <Outlines
          screenspace
          toneMapped={true}
          polygonOffset
          polygonOffsetFactor={10}
          transparent
          opacity={hovered * 1}
          color="white"
          angle={Math.PI / 2}
          thickness={10}
        />
        <meshBasicMaterial
          opacity={0.9}
          transparent
          color={clicked ? "lightblue" : hovered ? "aquamarine" : "red"}
        />
      </mesh>
    </group>
  );
}
